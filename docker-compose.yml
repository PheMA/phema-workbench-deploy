version: "3"

services:
  cqf-ruler:
    image: phema/phema-cqf-ruler:0.0.1
    container_name: phema-cqf-ruler
    restart: unless-stopped
    networks:
      - phema-network
    volumes:
      - ${PWD}/hapi.properties:/opt/phema/hapi.properties
      - ${PWD}/setenv.sh:/usr/local/tomcat/bin/setenv.sh
  postgres:
    image: postgres:11-alpine
    container_name: phema-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD=postgres
    networks:
      - phema-network
    volumes:
      - phema-postgres-volume:/var/lib/postgresql/data
  api:
    image: phema/phema-workbench-api:0.4.0
    container_name: phema-workbench-api
    restart: unless-stopped
    networks:
      - phema-network
    volumes:
      - phema-api-volume:/opt/phema/workbench/
  app:
    image: phema/phema-workbench-app:0.5.1
    container_name: phema-workbench-app
    restart: unless-stopped
    networks:
      - phema-network
  cors:
    image: redocly/cors-anywhere
    container_name: phema-cors-proxy
    restart: unless-stopped
    networks:
      - phema-network
  ingress:
    image: nginx:1.19-alpine
    container_name: phema-workbench-ingress
    restart: unless-stopped
    ports:
      - "4321:443"
    networks:
      - phema-network
    volumes:
      - ${PWD}/nginx-${PHEMA_WORKBENCH_ENV:-local}-https.conf:/etc/nginx/conf.d/default.conf
      - ${PHEMA_WORKBENCH_HTPASSWD_PATH:-/tmp/.htpasswd}:/opt/phema/workbench/
      - ${PHEMA_WORKBENCH_CERTS_PATH:-/opt/phema/workbench/certs}:/opt/phema/workbench/certs

volumes:
  phema-postgres-volume:
  phema-api-volume:

networks:
  phema-network:
